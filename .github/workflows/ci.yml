name: CI Pipeline for MR
on:
  push:
    branches:
      - "**"

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install docker-compose (if needed)
        run: |
          if ! command -v docker-compose &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y docker-compose
          fi
          docker-compose --version

      - name: Build and start services
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          LASTFM_API_KEY: ${{ secrets.LASTFM_API_KEY }}
          LASTFM_SHARED_SECRET: ${{ secrets.LASTFM_SHARED_SECRET }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          docker-compose -f docker-compose.ci.yml up -d --build

      - name: Verify services are running
        run: |
          docker-compose -f docker-compose.ci.yml ps
          docker-compose -f docker-compose.ci.yml exec -T backend python -c "print('Backend Python is working')" || echo "Backend Python check failed"

      - name: Run integration tests
        run: |
          docker-compose -f docker-compose.ci.yml exec -T backend pytest -m integration -vv --tb=short --no-header
        continue-on-error: true

      - name: Show all service logs on failure
        if: failure()
        run: |
          docker-compose -f docker-compose.ci.yml logs

      - name: Show backend logs
        run: |
          docker-compose -f docker-compose.ci.yml logs backend

      - name: Show test results and cleanup
        run: |
          docker-compose -f docker-compose.ci.yml ps
          docker-compose -f docker-compose.ci.yml down -v

  build-and-push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: integration-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Backend
      - name: Build backend image
        run: |
          docker build \
            -f backend/Dockerfile \
            -t iliketoasts/mr-backend:latest \
            -t iliketoasts/mr-backend:${{ github.sha }} \
            backend

      - name: Push backend image
        run: |
          docker push iliketoasts/mr-backend:latest
          docker push iliketoasts/mr-backend:${{ github.sha }}

      # Frontend
      - name: Build frontend image
        run: |
          docker build \
            -f mr-frontend/Dockerfile \
            -t iliketoasts/mr-frontend:latest \
            -t iliketoasts/mr-frontend:${{ github.sha }} \
            frontend

      - name: Push frontend image
        run: |
          docker push iliketoasts/mr-frontend:latest
          docker push iliketoasts/mr-frontend:${{ github.sha }}
